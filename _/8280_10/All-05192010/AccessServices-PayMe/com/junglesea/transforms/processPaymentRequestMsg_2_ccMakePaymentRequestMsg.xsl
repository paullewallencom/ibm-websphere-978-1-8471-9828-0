<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="com/junglesea/transforms/processPaymentRequestMsg_2_ccMakePaymentRequestMsg.map" md5sum="43e3e1e13dbff0a3494c10fc0c56d7e9" version="7.0.200" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.200
*
*   Mapping file:		processPaymentRequestMsg_2_ccMakePaymentRequestMsg.map
*   Map declaration(s):	processPaymentRequestMsg_2_ccMakePaymentRequestMsg
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FCustomerDomain-v1_0%252Fcom%252Fjunglesea%252Fbusinessservices%252Finterfaces%252FProcessCustomerPayments%257DprocessPaymentRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FPayMeLibrary%252Fcom%252Fjunglesea%252Fapps%252Fpayme%252FCardPaymentServices%257DccMakePaymentRequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:in="http://CustomerDomain-v1_0/com/junglesea/businessservices/interfaces/ProcessCustomerPayments"
    xmlns:in2="http://BillingDomain-Msg/com/junglesea/bo"
    xmlns:in3="wsdl.http://CustomerDomain-v1_0/com/junglesea/businessservices/interfaces/ProcessCustomerPayments"
    xmlns:in4="http://BillingDomain-v1_0/com/junglesea/bo/msg"
    xmlns:in5="http://ProductDomain-v1_0/com/junglesea/bo"
    xmlns:in6="http://CommonDomain-v1_0/com/junglesea/bo"
    xmlns:in7="http://BillingDomain-v1_0/com/junglesea/bo"
    xmlns:out="http://PayMeLibrary/com/junglesea/apps/payme"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out2="http://PayMeLibrary/com/junglesea/apps/payme/CardPaymentServices"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:out3="wsdl.http://PayMeLibrary/com/junglesea/apps/payme/CardPaymentServices"
    xmlns:map="http://AccessServices-PayMe/com/junglesea/transforms/processPaymentRequestMsg_2_ccMakePaymentRequestMsg"
    exclude-result-prefixes="in in2 in3 in4 in5 in6 in7 map xalan"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="body" mode="map:processPaymentRequestMsg_2_ccMakePaymentRequestMsg"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:processPaymentRequestMsg_2_ccMakePaymentRequestMsg">
    <body>
      <out2:ccMakePayment>
        <input1>
          <!-- a simple data mapping: "in:processPayment/inputParams/Payment/Amount"(double) to "amount"(double) -->
          <xsl:if test="in:processPayment/inputParams/Payment/Amount">
            <amount>
              <xsl:value-of select="in:processPayment/inputParams/Payment/Amount"/>
            </amount>
          </xsl:if>
          <card>
            <!-- a simple data mapping: "in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardNumber"(string) to "cardNumber"(string) -->
            <xsl:if test="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardNumber">
              <cardNumber>
                <xsl:value-of select="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardNumber"/>
              </cardNumber>
            </xsl:if>
            <expiryDate>
              <!-- a simple data mapping: "in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryMonth"(string) to "month"(int) -->
              <xsl:if test="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryMonth">
                <month>
                  <xsl:value-of select="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryMonth"/>
                </month>
              </xsl:if>
              <!-- a simple data mapping: "in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryYear"(string) to "year"(int) -->
              <xsl:if test="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryYear">
                <year>
                  <xsl:value-of select="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/ExpiryYear"/>
                </year>
              </xsl:if>
            </expiryDate>
            <!-- a simple data mapping: "in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardType"(string) to "cardType"(string) -->
            <xsl:if test="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardType">
              <cardType>
                <xsl:value-of select="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/CardType"/>
              </cardType>
            </xsl:if>
            <!-- a simple data mapping: "in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/SecurityCode"(string) to "securityCode"(string) -->
            <xsl:if test="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/SecurityCode">
              <securityCode>
                <xsl:value-of select="in:processPayment/inputParams/Payment/PaymentMethod/CreditCardDetails/SecurityCode"/>
              </securityCode>
            </xsl:if>
          </card>
          <billDetails>
            <!-- a simple data mapping: "in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/FirstName"(string) to "firstName"(string) -->
            <xsl:if test="in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/FirstName">
              <firstName>
                <xsl:value-of select="in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/FirstName"/>
              </firstName>
            </xsl:if>
            <!-- a simple data mapping: "in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/LastName"(string) to "lastName"(string) -->
            <xsl:if test="in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/LastName">
              <lastName>
                <xsl:value-of select="in:processPayment/inputParams/Payment/Payor/PartyDetails/Person/Name/LastName"/>
              </lastName>
            </xsl:if>
          </billDetails>
        </input1>
      </out2:ccMakePayment>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
